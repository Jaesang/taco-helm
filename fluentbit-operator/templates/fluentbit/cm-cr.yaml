{{- if .Values.fluentbit.esTemplate.enabled }}
{{- $envAll := . }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "fluentbit-operator.name" . }}-cr-bin
  namespace: {{ $.Release.Namespace }}
  labels:
    app: {{ template "fluentbit-operator.name" . }}-operator
{{ include "fluentbit-operator.labels" . | indent 4 }}
data:
  create_template.sh: |-
    #!/bin/sh
    set -ev

{{ range $ilm, $fields := .Values.fluentbit.esTemplate.ilms }}
    echo "trying to setting policy {{$ilm}}..."

    result=$(curl -k -u ${ES_USER}:${ES_PW} \
    -X PUT "${ES_URL}/_ilm/policy/{{$ilm}}"     \
    -H 'Content-Type: application/json' -H 'kbn-xsrf: true' -d @/tmp/{{$ilm}}.json     \
    | python -c "import sys, json; print(json.load(sys.stdin)['acknowledged']);" )

    if [ "$result" == "True" ]; then
      echo "{{$ilm}} ilm created!"
    else
      echo "{{$ilm}} ilm not created!"
    fi
{{- end}}
{{ range $template, $fields := .Values.fluentbit.esTemplate.templates }}

    echo "trying to setting Template {{$template}}..."
    result=$(curl -k -u ${ES_USER}:${ES_PW} \
    -X PUT "${ES_URL}/_template/{{$template}}"     \
    -H 'Content-Type: application/json' -H 'kbn-xsrf: true' -d @/tmp/{{$template}}.json     \
    | python -c "import sys, json; print(json.load(sys.stdin)['acknowledged']);")
    
    if [ "$result" == "True" ]; then
      echo "{{$template}} template created!"
    else
      echo "{{$template}} template not created!"
    fi
{{- end}}
{{- end}}